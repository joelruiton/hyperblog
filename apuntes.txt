git init: lo usamos para determinar la carpeta en la que vamos a trabajar.

git status: lo usamos para saber si tenemos un archivo añadido o borrado en nuestro proyecto, para saber en la rama en la 
que estamos y si tenemos commits.

git add: es para añadir un archivo a nuestra rama seguidamente ponemos entre comillas el nombre de nuestro archivo o 
poner un punto para añadir todos los archivos de nuestra carpeta.

git rm: lo usamos para borrar un archivo que hayamos añadido, para eliminarlo por completo de nuestra rama usamos
git rm --cached.

git commit: se usa para añadir un commit a nuestra rama, también podemos ponerle un -m seguidamente ponemos entre comillas 
nuestro ensaje.

git config: muestra configuraciones de git también podemos usar –list para mostrar la configuración por defecto de nuestro 
git y si añadimos --show-origin inhales nos muestra las configuraciones guardadas y su ubicación.

git config --global user.name: cambia de manera global el nombre del usuario, seguidamente ponemos entre comillas nuestro 
nombre.

git config --global user.email: cambia de manera global el email del usuario, seguidamente ponemos entre comillas nuestro 
nombre.

git log "archivo": se usa para ver la historia de nuestros archivos, los commits, el usuario que lo cambió, cuando se 
realizaron los cambios etc. seguidamente ponemos el nombre de nuestro archivo.

git show "archivo": para ver los cambios historicos del archivo indicado

git diff "commit2" "commit1": compara 2 commits por su ID
git diff: muestra diferencias entre el directorio actual y staging

git reset "commit" --hard: regresa en el tiempo a un commit (--hard hace que se regrese totalmente en el tiempo,
de no poner esto podríamos deshacer el reset y regresar a la version moderna)